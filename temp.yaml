#SAM FileS
AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: SAM Task Deployment
Parameters:
  MyGlobalTableName:
    Type: String
    Default: ka-me-ha-me-ha-archives
    Description: Name of the Global table to create

  Region1:
    Type: String
    Default: us-west-2
    Description: The first region for the replica

  Region2:
    Type: String
    Default: ap-south-1
    Description: The second region for the replica
Resources:
  MyGlobalTable:
    Type: AWS::DynamoDB::GlobalTable
    Properties:
      TableName: !Ref MyGlobalTableName
      AttributeDefinitions: 
        - AttributeName: User_id
          AttributeType: S
        - AttributeName: Game_id
          AttributeType: S
        - AttributeName: User_name
          AttributeType: S
        - AttributeName: User_age
          AttributeType: N
      KeySchema:
        - AttributeName: User_id
          KeyType: HASH
        - AttributeName: Game_id
          KeyType: RANGE
      LocalSecondaryIndexes:
        - IndexName: NameIndex
          KeySchema:
            - AttributeName: User_id
              KeyType: HASH
            - AttributeName: User_name
              KeyType: RANGE
          Projection:
            NonKeyAttributes:
              - Game_id
              - User_age
            ProjectionType: INCLUDE
        - IndexName: AgeIndex
          KeySchema:
            - AttributeName: User_id
              KeyType: HASH
            - AttributeName: User_age
              KeyType: RANGE
          Projection:
            NonKeyAttributes:
              - Game_id
              - User_name
            ProjectionType: INCLUDE          
      Replicas:
        - Region: !Ref Region1
          ReadProvisionedThroughputSettings:
            ReadCapacityAutoScalingSettings:
              MinCapacity: 1
              MaxCapacity: 2
              TargetTrackingScalingPolicyConfiguration:
                TargetValue: 70
          TableClass: STANDARD
          Tags:
            - Key: Environment
              Value: Dev
            - Key: Project
              Value: Task-1

        - Region: !Ref Region2
          ReadProvisionedThroughputSettings:
            ReadCapacityAutoScalingSettings:
              MinCapacity: 1
              MaxCapacity: 5
              TargetTrackingScalingPolicyConfiguration:
                TargetValue: 70
          TableClass: STANDARD
          Tags:
            - Key: Environment
              Value: Dev
            - Key: Project
              Value: Task-1

      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES

      WriteProvisionedThroughputSettings:
        WriteCapacityAutoScalingSettings:
          MinCapacity: 1
          MaxCapacity: 2
          TargetTrackingScalingPolicyConfiguration:
            TargetValue: 70
  MyLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: MyLambdaExecutionRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: DynamoDBPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:DescribeStream
                  - dynamodb:GetRecords
                  - dynamodb:GetShardIterator
                  - dynamodb:ListStreams
                Resource: '*'
        - PolicyName: CloudWatchLogsPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: '*'
        - PolicyName: S3Policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:*
                Resource: '*'

  MyLambdaEnabler:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: python3.12
      Handler: app.lambda_handler
      FunctionName: ka-me-ha-me-ha-enabler
      CodeUri: /
      Description: This is a lambda function for adding a object in s3 bucket.
      Role: !GetAtt MyLambdaRole.Arn
  


  MyEventSourceMapping:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      BatchSize: 100
      FunctionName: !Ref  MyLambdaEnabler
      EventSourceArn: !GetAtt MyGlobalTable.StreamArn
      StartingPosition: "LATEST"

  

Outputs:
  LambdaFunctionArn:
    Description: "ARN of the Lambda function"
    Value: !GetAtt MyLambdaEnabler.Arn
